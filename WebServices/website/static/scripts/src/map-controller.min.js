var DEFAULT_LAT=42.6;var DEFAULT_LNG=-8.933;var DEFAULT_ZOOM=6;var DEFAULT_GS_ELEVATION=15;var USER_ZOOM=8;var TIMESTAMP_FORMAT="HH:mm:ss.sss";function centerMap(d,c,a,b){d.setView(new L.LatLng(c,a),b)}function locateUser(b,c,a){$.get("http://ipinfo.io",function(e){var g=e.loc.split(",");var f=parseFloat(g[0]);var d=parseFloat(g[1]);b.info("[map-ctrl] User located at = "+g);centerMap(c,f,d,USER_ZOOM);if(a!=null){a.lat=f;a.lng=d}},"jsonp").fail(function(){b.warn("[map-ctrl] Could not locate user");centerMap(c,DEFAULT_LAT,DEFAULT_LNG,DEFAULT_ZOOM);if(a!=null){a.lat=DEFAULT_LAT;a.lng=DEFAULT_LNG}})}var app=angular.module("satellite.tracker.js",["leaflet-directive","ngResource","ui.bootstrap","remoteValidation","ngCookies","jsonrpc"]);app.config(function(a){a.decorator("$log",function(b){var c=null;return{setScope:function(d){c=d},log:function(){b.log.apply(null,["[log] "+arguments[0]]);c.$broadcast("logEvent",arguments[0])},info:function(){b.info.apply(null,["[info] "+arguments[0]]);c.$broadcast("infoEvent",arguments[0])},error:function(){b.error.apply(null,["[error] "+arguments[0]]);c.$broadcast("errEvent",arguments[0])},warn:function(){b.warn.apply(null,["[warn] "+arguments[0]]);c.$broadcast("warnEvent",arguments[0])}}})});app.service("satnetRPC",function(b,d){var c=""+d.protocol()+"://"+d.host()+":"+d.port()+"/jrpc/";var a=b.newService("configuration",c);this.listGS=a.createMethod("gs.list");this.addGS=a.createMethod("gs.create");this.getGSCfg=a.createMethod("gs.getConfiguration");this.setGSCfg=a.createMethod("gs.setConfiguration");this.deleteGS=a.createMethod("gs.delete");this.listSC=a.createMethod("sc.list");this.addSC=a.createMethod("sc.create");this.getSCCfg=a.createMethod("sc.getConfiguration");this.setSCCfg=a.createMethod("sc.setConfiguration");this.deleteSC=a.createMethod("sc.delete")});app.run(function(a,c,d,b){c.setScope(a);d.defaults.headers.post["X-CSRFToken"]=b.csrftoken});app.controller("NotificationAreaController",["$scope","$filter",function(a,b){a.eventLog=[];a.$on("infoEvent",function(d,c){a.eventLog.unshift({type:d.name,timestamp:b("date")(new Date(),TIMESTAMP_FORMAT),msg:c})})}]);app.controller("GSAreaController",["$scope","$log",function(a,b){}]);app.controller("SCAreaController",["$scope","$log",function(a,b){}]);app.controller("MapController",["$scope","$log","$resource","leafletData",function(b,d,c,a){angular.extend(b,{center:{lat:DEFAULT_LAT,lng:DEFAULT_LNG,zoom:DEFAULT_ZOOM}});a.getMap().then(function(e){locateUser(d,e,null)})}]);app.controller("GSMenuCtrl",["$scope","$log","$modal","satnetRPC",function(a,d,b,c){a.gsIds=[];a.addGroundStation=function(){var e=b.open({templateUrl:"/static/scripts/src/templates/addGroundStation.html",controller:"AddGSModalCtrl",backdrop:"static"})};a.editGroundStation=function(f){var e=b.open({templateUrl:"/static/scripts/src/templates/editGroundStation.html",controller:"EditGSModalCtrl",backdrop:"static",resolve:{groundstationId:function(){return(f)}}})};a.refreshGSList=function(){var e=c.listGS().success(function(f){d.info("[satnet-jrpc] GroundStations found = "+JSON.stringify(f));a.gsIds=f.slice(0)});e.error(function(f){d.error('[satnet-jrpc] Error calling "listGS()" = '+JSON.stringify(f))})};a.refreshGSList()}]);app.controller("SCMenuCtrl",["$scope","$log","$modal","satnetRPC",function(a,d,b,c){a.scIds=[];a.addSpacecraft=function(){var e=b.open({templateUrl:"/static/scripts/src/templates/addSpacecraft.html",controller:"AddSCModalCtrl",backdrop:"static",size:"lg"})};a.editSpacecraft=function(f){var e=b.open({templateUrl:"/static/scripts/src/templates/editSpacecraft.html",controller:"EditSCModalCtrl",backdrop:"static",resolve:{spacecraft_id:function(){return(f)}}})};a.refreshSCList=function(){var e=c.listSC().success(function(f){d.info("[satnet-jrpc] Spacecraft found = "+JSON.stringify(f));a.scIds=f.slice(0)});e.error(function(f){d.error('[satnet-jrpc] Error calling "listGS()" = '+JSON.stringify(f))})};a.refreshSCList()}]);app.controller("ExitMenuCtrl",["$scope","$log",function(a,b){a.home=function(){b.info("Exiting...")}}]);app.controller("AddGSModalCtrl",["$scope","$log","$modalInstance","leafletData","satnetRPC",function(b,e,d,a,c){b.gs={};b.gs.identifier="";b.gs.callsign="";b.gs.elevation=DEFAULT_GS_ELEVATION;angular.extend(b,{center:{lat:DEFAULT_LAT,lng:DEFAULT_LNG,zoom:DEFAULT_ZOOM},markers:{gsMarker:{lat:DEFAULT_LAT,lng:DEFAULT_LNG,message:"Move me!",focus:true,draggable:true}}});a.getMap().then(function(f){locateUser(e,f,b.markers.gsMarker)});b.ok=function(){var f=[b.gs.identifier,b.gs.callsign,b.gs.elevation.toFixed(2),b.markers.gsMarker.lat.toFixed(6),b.markers.gsMarker.lng.toFixed(6)];c.addGS(f).success(function(g){e.info("[map-ctrl] GS successfully added, id = "+g.groundstation_id)}).error(function(g){e.error("[map-ctrl] Could not add GS, reason = "+JSON.stringify(g))});d.close()};b.cancel=function(){d.close()}}]);app.controller("EditGSModalCtrl",["$scope","$log","$modalInstance","leafletData","satnetRPC","groundstationId",function(b,f,e,a,d,c){b.gs={};b.center={lat:DEFAULT_LAT,lng:DEFAULT_LNG,zoom:DEFAULT_ZOOM};b.markers={};d.getGSCfg([c]).success(function(g){f.info("[map-ctrl] GS configuration retrieved: "+JSON.stringify(g));b.gs.identifier=c;b.gs.callsign=g.groundstation_callsign;b.gs.elevation=g.groundstation_elevation;angular.extend(b,{center:{lat:g.groundstation_latlon[0],lng:g.groundstation_latlon[1],zoom:DEFAULT_ZOOM},markers:{gsMarker:{lat:g.groundstation_latlon[0],lng:g.groundstation_latlon[1],message:"Move me!",focus:true,draggable:true}}})}).error(function(g){f.error("[map-ctrl] Could not load configuration for GS, id = "+c+", error = "+JSON.stringify(g))});b.update=function(){var g={groundstation_id:b.gs.identifier,groundstation_callsign:b.gs.callsign,groundstation_elevation:b.gs.elevation.toFixed(2),groundstation_latlon:[b.markers.gsMarker.lat.toFixed(6),b.markers.gsMarker.lng.toFixed(6)]};d.setGSCfg([b.gs.identifier,g]).success(function(h){f.info("[map-ctrl] GS successfully configured, id = "+h.groundstation_id)}).error(function(h){f.error("[map-ctrl] Could not set configuration for GS, id = "+c+", error = "+JSON.stringify(h))});e.close()};b.cancel=function(){e.close()};b.erase=function(){if(confirm("Delete this ground station?")==true){d.deleteGS([c]);f.info("[map-ctrl] Ground station removed, id = "+c);e.close()}}}]);app.controller("AddSCModalCtrl",["$scope","$log","$modalInstance","satnetRPC",function(a,d,c,b){a.sc={};a.sc.identifier="";a.sc.callsign="";a.sc.tleid="";a.ok=function(){var e=[a.sc.identifier,a.sc.callsign,a.sc.tleid];b.addSC(e).success(function(f){d.info("[map-ctrl] SC successfully added, id = "+f.spacecraft_id)}).error(function(f){d.error("[map-ctrl] Could not add SC, reason = "+JSON.stringify(f))});c.close()};a.cancel=function(){c.close()}}]);